name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: dedups-linux-x86_64
            binary_name: dedups
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: dedups-macos-x86_64
            binary_name: dedups
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: dedups-macos-aarch64
            binary_name: dedups
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: dedups-windows-x86_64.exe
            binary_name: dedups.exe

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Prepare artifact
      shell: bash
      run: |
        mkdir -p artifacts
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/${{ matrix.target }}/release/dedups.exe artifacts/dedups-windows-x86_64.exe
        elif [[ "${{ matrix.os }}" == "macos-latest" && "${{ matrix.target }}" == "aarch64-apple-darwin" ]]; then
          cp target/${{ matrix.target }}/release/dedups artifacts/dedups-macos-aarch64
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          cp target/${{ matrix.target }}/release/dedups artifacts/dedups-macos-x86_64
        else
          cp target/${{ matrix.target }}/release/dedups artifacts/dedups-linux-x86_64
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: artifacts/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
        # This will download all artifacts into subfolders named after the artifact

    - name: Move all artifacts to root
      run: |
        find . -type f -name "dedups-*" -exec mv {} . \;

    - name: List downloaded artifacts
      run: ls -la

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dedups-linux-x86_64
          dedups-macos-x86_64
          dedups-macos-aarch64
          dedups-windows-x86_64.exe
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
