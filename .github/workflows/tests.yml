name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Clippy
      run: cargo clippy -- -D warnings
    
    # Run tests (OS-specific)
    - name: Run tests (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: cargo test --features linux
      env:
        RUSTFLAGS: "-C target-cpu=native"

    - name: Run tests (macOS)
      if: matrix.os == 'macos-latest'
      run: cargo test --features linux

    - name: Run tests (Windows)
      if: matrix.os == 'windows-latest'
      run: cargo test

    # Run integration tests (OS-specific)
    - name: Run integration tests (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: cargo test --test '*' --features linux
      env:
        RUSTFLAGS: "-C target-cpu=native"

    - name: Run integration tests (macOS)
      if: matrix.os == 'macos-latest'
      run: cargo test --test '*' --features linux

    - name: Run integration tests (Windows)
      if: matrix.os == 'windows-latest'
      run: cargo test --test '*' --features test_mode 